version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # nextjs1: &nextjs
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000"
  #   environment:
  #     AUTH_SECRET: "3E3cJTuzhptPd9xh74mDa4Xy0YDBympuqaCkZ2qGcRE="
  #     AUTH_DISCORD_ID: "1323567909703913523"
  #     AUTH_DISCORD_SECRET: "1EyP0fLR2UGAOOPB6ZuNHgOB6hfN8Z6-"
  #     DATABASE_URL: "postgresql://postgres:sPPR6ikb0paQ5S3p@host.docker.internal:5432/quikconnect.in"
  #   env_file:
  #     - .env

  # nextjs2:
  #   <<: *nextjs

  # nextjs3:
  #   <<: *nextjs

  # nginx:
    # image: nginx:latest
    # ports:
    #   - "80:80"
    # volumes:
    #   - ./nginx.conf:/etc/nginx/nginx.conf:ro
    # depends_on:
    #   - nextjs1
    #   - nextjs2
    #   - nextjs3